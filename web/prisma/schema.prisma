// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int            @id @default(autoincrement())
  email               String         @unique
  name                String?
  accessToken         String
  foodEntries         FoodEntry[]
  workoutEntries      WorkoutEntry[]
  sleepEntries        SleepEntry[]
  waterEntries        WaterEntry[]
  height              Float          @default(0)
  currentWeight       Float          @default(0)
  startWeight         Float          @default(0)
  goalWeight          Float          @default(0)
  goalDate            DateTime       @default(now())
  gender              Boolean        @default(false)
  age                 Int            @default(0)
  birthDate           DateTime       @default(now())
  activityLevel       Int            @default(0)
  weeklyGoal          Float          @default(0)
  finishedOnboarding  Boolean        @default(false)
}

model Meal {
  id          Int         @id @default(autoincrement())
  name        String
  foodEntries FoodEntry[]
}

model FoodEntry {
  id         Int      @id @default(autoincrement())
  name       String
  meal       Meal     @relation(fields: [mealId], references: [id], onDelete: Cascade)
  mealId     Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  calories   Int
  consumedAt DateTime @default(now())
}

model WorkoutCategory {
  id       Int            @id @default(autoincrement())
  name     String
  workouts WorkoutEntry[]
}

model WorkoutEntry {
  id                Int             @id @default(autoincrement())
  name              String
  workoutCategory   WorkoutCategory @relation(fields: [workoutCategoryId], references: [id], onDelete: Cascade)
  workoutCategoryId Int
  user              User            @relation(fields: [userId], references: [id])
  userId            Int
  caloriesBurned    Int
  duration          Int
  completedAt       DateTime        @default(now())
}

model SleepEntry {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  duration    Int
  completedAt DateTime @default(now())
}

model WaterEntry {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  amount     Int
  consumedAt DateTime @default(now())
}