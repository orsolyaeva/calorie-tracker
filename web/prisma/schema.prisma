// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @default(autoincrement()) @id
  email     String   @unique
  name      String?
  accessToken String
  hasComplatedProfile Boolean @default(false)
  foodEntries FoodEntry[]
  workoutEntries WorkoutEntry[]
  sleepEntries SleepEntry[]
  waterEntries WaterEntry[]
}

model Meal {
    id        Int      @default(autoincrement()) @id
    name      String
    foodEntries FoodEntry[]
}

model FoodEntry {
    id        Int      @default(autoincrement()) @id
    name     String
    meal      Meal   @relation(fields: [mealId], references: [id], onDelete: Cascade)
    mealId    Int
    user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    Int
    calories   Int
    consumedAt DateTime     @default(now())
}

model WorkoutCategory {
    id        Int      @default(autoincrement()) @id
    name      String
    workouts WorkoutEntry[]
}

model WorkoutEntry {
    id        Int      @default(autoincrement()) @id
    name     String
    workoutCategory      WorkoutCategory   @relation(fields: [workoutCategoryId], references: [id], onDelete: Cascade)
    workoutCategoryId    Int
    user      User   @relation(fields: [userId], references: [id])
    userId    Int
    caloriesBurned   Int
    duration   Int
    completedAt DateTime     @default(now())
}

model SleepEntry {
    id        Int      @default(autoincrement()) @id
    user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    Int
    duration   Int
    completedAt DateTime     @default(now())
}

model WaterEntry {
    id        Int      @default(autoincrement()) @id
    user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    Int
    amount   Int
    consumedAt DateTime     @default(now())
}

